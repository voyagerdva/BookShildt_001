Classfile /E:/__PROJECT__/JAVA/BookShildt_001/out/production/BookShildt_001/e0035_Public_Private_3/FlyAccessTest.class
  Last modified 9 но€б. 2022 г.; size 1235 bytes
  SHA-256 checksum 56593b2ecd54aac321f0c8b6d22a8db204619158bbc3c8e3f4a1a52af8c3e107
  Compiled from "FlyAccessTest.java"
class e0035_Public_Private_3.FlyAccessTest
  minor version: 0
  major version: 61
  flags: (0x0020) ACC_SUPER
  this_class: #41                         // e0035_Public_Private_3/FlyAccessTest
  super_class: #2                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 2, attributes: 3
Constant pool:
   #1 = Methodref          #2.#3          // java/lang/Object."<init>":()V
   #2 = Class              #4             // java/lang/Object
   #3 = NameAndType        #5:#6          // "<init>":()V
   #4 = Utf8               java/lang/Object
   #5 = Utf8               <init>
   #6 = Utf8               ()V
   #7 = Class              #8             // e0035_Public_Private_3/Fly
   #8 = Utf8               e0035_Public_Private_3/Fly
   #9 = Methodref          #7.#3          // e0035_Public_Private_3/Fly."<init>":()V
  #10 = Fieldref           #7.#11         // e0035_Public_Private_3/Fly.a:I
  #11 = NameAndType        #12:#13        // a:I
  #12 = Utf8               a
  #13 = Utf8               I
  #14 = Fieldref           #7.#15         // e0035_Public_Private_3/Fly.b:I
  #15 = NameAndType        #16:#13        // b:I
  #16 = Utf8               b
  #17 = Methodref          #7.#18         // e0035_Public_Private_3/Fly.setC:(I)V
  #18 = NameAndType        #19:#20        // setC:(I)V
  #19 = Utf8               setC
  #20 = Utf8               (I)V
  #21 = Fieldref           #22.#23        // java/lang/System.out:Ljava/io/PrintStream;
  #22 = Class              #24            // java/lang/System
  #23 = NameAndType        #25:#26        // out:Ljava/io/PrintStream;
  #24 = Utf8               java/lang/System
  #25 = Utf8               out
  #26 = Utf8               Ljava/io/PrintStream;
  #27 = Methodref          #7.#28         // e0035_Public_Private_3/Fly.getC:()I
  #28 = NameAndType        #29:#30        // getC:()I
  #29 = Utf8               getC
  #30 = Utf8               ()I
  #31 = InvokeDynamic      #0:#32         // #0:makeConcatWithConstants:(III)Ljava/lang/String;
  #32 = NameAndType        #33:#34        // makeConcatWithConstants:(III)Ljava/lang/String;
  #33 = Utf8               makeConcatWithConstants
  #34 = Utf8               (III)Ljava/lang/String;
  #35 = Methodref          #36.#37        // java/io/PrintStream.println:(Ljava/lang/String;)V
  #36 = Class              #38            // java/io/PrintStream
  #37 = NameAndType        #39:#40        // println:(Ljava/lang/String;)V
  #38 = Utf8               java/io/PrintStream
  #39 = Utf8               println
  #40 = Utf8               (Ljava/lang/String;)V
  #41 = Class              #42            // e0035_Public_Private_3/FlyAccessTest
  #42 = Utf8               e0035_Public_Private_3/FlyAccessTest
  #43 = Utf8               Code
  #44 = Utf8               LineNumberTable
  #45 = Utf8               LocalVariableTable
  #46 = Utf8               this
  #47 = Utf8               Le0035_Public_Private_3/FlyAccessTest;
  #48 = Utf8               main
  #49 = Utf8               ([Ljava/lang/String;)V
  #50 = Utf8               args
  #51 = Utf8               [Ljava/lang/String;
  #52 = Utf8               ob
  #53 = Utf8               Le0035_Public_Private_3/Fly;
  #54 = Utf8               SourceFile
  #55 = Utf8               FlyAccessTest.java
  #56 = Utf8               BootstrapMethods
  #57 = MethodHandle       6:#58          // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #58 = Methodref          #59.#60        // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #59 = Class              #61            // java/lang/invoke/StringConcatFactory
  #60 = NameAndType        #33:#62        // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #61 = Utf8               java/lang/invoke/StringConcatFactory
  #62 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #63 = String             #64            // a, b, c: \u0001 \u0001 \u0001
  #64 = Utf8               a, b, c: \u0001 \u0001 \u0001
  #65 = Utf8               InnerClasses
  #66 = Class              #67            // java/lang/invoke/MethodHandles$Lookup
  #67 = Utf8               java/lang/invoke/MethodHandles$Lookup
  #68 = Class              #69            // java/lang/invoke/MethodHandles
  #69 = Utf8               java/lang/invoke/MethodHandles
  #70 = Utf8               Lookup
{
  e0035_Public_Private_3.FlyAccessTest();
    descriptor: ()V
    flags: (0x0000)
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 3: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Le0035_Public_Private_3/FlyAccessTest;

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=2, args_size=1
         0: new           #7                  // class e0035_Public_Private_3/Fly
         3: dup
         4: invokespecial #9                  // Method e0035_Public_Private_3/Fly."<init>":()V
         7: astore_1
         
         8: aload_1
         9: bipush        10
        11: putfield      #10                 // Field e0035_Public_Private_3/Fly.a:I
        
        14: aload_1
        15: bipush        20
        17: putfield      #14                 // Field e0035_Public_Private_3/Fly.b:I

        20: aload_1
        21: bipush        100
        23: invokevirtual #17                 // Method e0035_Public_Private_3/Fly.setC:(I)V

        26: getstatic     #21                 // Field java/lang/System.out:Ljava/io/PrintStream;
        29: aload_1

        30: getfield      #10                 // Field e0035_Public_Private_3/Fly.a:I
        33: aload_1
        
        34: getfield      #14                 // Field e0035_Public_Private_3/Fly.b:I
        37: aload_1
        
        38: invokevirtual #27                 // Method e0035_Public_Private_3/Fly.getC:()I
        41: invokedynamic #31,  0             // InvokeDynamic #0:makeConcatWithConstants:(III)Ljava/lang/String;
        46: invokevirtual #35                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        49: return
      LineNumberTable:
        line 5: 0
        line 7: 8
        line 8: 14
        line 11: 20
        line 13: 26
        line 14: 49
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      50     0  args   [Ljava/lang/String;
            8      42     1    ob   Le0035_Public_Private_3/Fly;
}
SourceFile: "FlyAccessTest.java"
BootstrapMethods:
  0: #57 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #63 a, b, c: \u0001 \u0001 \u0001
InnerClasses:
  public static final #70= #66 of #68;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
#############################################################################################
package e0035_Public_Private_3;

class FlyAccessTest {
    public static void main(String[] args) {
        Fly ob = new Fly();

        ob.a = 10;
        ob.b = 20;

//        ob.c = 100;
        ob.setC(100);

        System.out.println("a, b, c: " + ob.a + " " + ob.b + " " + ob.getC());
    }

}
//---------------------------------------------------------------------------------------------
