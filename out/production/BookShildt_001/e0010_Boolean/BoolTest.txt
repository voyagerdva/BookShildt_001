Classfile /E:/__PROJECT__/JAVA/BookShildt_001/out/production/BookShildt_001/e0010_Boolean/BoolTest.class
  Last modified 24 сент. 2022 г.; size 1174 bytes
  SHA-256 checksum a67bc87d8d5ea3552fe82ce20c9827f0b287f44c9db1bc85ed23ead8fff9a1af
  Compiled from "BoolTest.java"
public class e0010_Boolean.BoolTest
  minor version: 0
  major version: 61
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #29                         // e0010_Boolean/BoolTest
  super_class: #2                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 2, attributes: 3
Constant pool:
   #1 = Methodref          #2.#3          // java/lang/Object."<init>":()V
   #2 = Class              #4             // java/lang/Object
   #3 = NameAndType        #5:#6          // "<init>":()V
   #4 = Utf8               java/lang/Object
   #5 = Utf8               <init>
   #6 = Utf8               ()V
   #7 = Fieldref           #8.#9          // java/lang/System.out:Ljava/io/PrintStream;
   #8 = Class              #10            // java/lang/System
   #9 = NameAndType        #11:#12        // out:Ljava/io/PrintStream;
  #10 = Utf8               java/lang/System
  #11 = Utf8               out
  #12 = Utf8               Ljava/io/PrintStream;
  #13 = InvokeDynamic      #0:#14         // #0:makeConcatWithConstants:(Z)Ljava/lang/String;
  #13 = InvokeDynamic      #0:#14         // #0:makeConcatWithConstants:(Z)Ljava/lang/String;
  #14 = NameAndType        #15:#16        // makeConcatWithConstants:(Z)Ljava/lang/String;
  #15 = Utf8               makeConcatWithConstants
  #16 = Utf8               (Z)Ljava/lang/String;
  #14 = NameAndType        #15:#16        // makeConcatWithConstants:(Z)Ljava/lang/String;
  #15 = Utf8               makeConcatWithConstants
  #16 = Utf8               (Z)Ljava/lang/String;
  #17 = Methodref          #18.#19        // java/io/PrintStream.println:(Ljava/lang/String;)V
  #18 = Class              #20            // java/io/PrintStream
  #19 = NameAndType        #21:#22        // println:(Ljava/lang/String;)V
  #20 = Utf8               java/io/PrintStream
  #21 = Utf8               println
  #22 = Utf8               (Ljava/lang/String;)V
  #23 = String             #24            // IT WILL BE DO
  #24 = Utf8               IT WILL BE DO
  #25 = String             #26            // IT WILL NOT BE DO NOT
  #26 = Utf8               IT WILL NOT BE DO NOT
  #27 = String             #28            // 10 > 9 EQUAL true
  #28 = Utf8               10 > 9 EQUAL true
  #29 = Class              #30            // e0010_Boolean/BoolTest
  #30 = Utf8               e0010_Boolean/BoolTest
  #31 = Utf8               Code
  #32 = Utf8               LineNumberTable
  #33 = Utf8               LocalVariableTable
  #34 = Utf8               this
  #35 = Utf8               Le0010_Boolean/BoolTest;
  #36 = Utf8               main
  #37 = Utf8               ([Ljava/lang/String;)V
  #38 = Utf8               args
  #39 = Utf8               [Ljava/lang/String;
  #40 = Utf8               b
  #41 = Utf8               Z
  #42 = Utf8               StackMapTable
  #43 = Utf8               SourceFile
  #44 = Utf8               BoolTest.java
  #45 = Utf8               BootstrapMethods
  #46 = MethodHandle       6:#47          // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #47 = Methodref          #48.#49        // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #48 = Class              #50            // java/lang/invoke/StringConcatFactory
  #49 = NameAndType        #15:#51        // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #50 = Utf8               java/lang/invoke/StringConcatFactory
  #51 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #52 = String             #53            // b EQUAL \u0001
  #53 = Utf8               b EQUAL \u0001
  #54 = Utf8               InnerClasses
  #55 = Class              #56            // java/lang/invoke/MethodHandles$Lookup
  #56 = Utf8               java/lang/invoke/MethodHandles$Lookup
  #57 = Class              #58            // java/lang/invoke/MethodHandles
  #58 = Utf8               java/lang/invoke/MethodHandles
  #59 = Utf8               Lookup
{
  public e0010_Boolean.BoolTest();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 3: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Le0010_Boolean/BoolTest;

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=2, args_size=1

# 		ВЕСЬ КОД
#        boolean b;
#
#        b = false;
#        System.out.println("b EQUAL " + b);
#
#        b = true;
#        System.out.println("b EQUAL " + b);
#
#        if(b) System.out.println("IT WILL BE DO");
#        b = false;
#        if(b) System.out.println("IT WILL NOT BE DO NOT");
#
#        System.out.println("10 > 9 EQUAL " + (10 > 9));
      ==========================================================================================================
# b = false;
# System.out.println("b EQUAL " + b);

         0: iconst_0	# Загружает В СТЕК int (boolean, byte, char, short) константу 0 (false) в диапазоне [-1, 5]
         1: istore_1	# Выгружает int из стека в массив локальных переменных 
         2: getstatic     #7                  // Field java/lang/System.out:Ljava/io/PrintStream;
         Находит ссылку на статическое поле указанное в пуле под индексом 7 и кладет ее на вершину стека
          #7 = Fieldref           #8.#9          // java/lang/System.out:Ljava/io/PrintStream;
          #8 = Class              #10            // java/lang/System
          #9 = NameAndType        #11:#12        // out:Ljava/io/PrintStream;
          #10 = Utf8               java/lang/System
          #11 = Utf8               out
          #12 = Utf8               Ljava/io/PrintStream;

         5: iload_1		# Загружает int в стек из массива локальных переменных 
         6: invokedynamic #13,  0             // InvokeDynamic #0:makeConcatWithConstants:(Z)Ljava/lang/String;
         Вызов динамически-вычисляемых call sites. Сейчас, например, используется в Java для создания объектов для лямбд.
          #13 = InvokeDynamic      #0:#14         // #0:makeConcatWithConstants:(Z)Ljava/lang/String;
          #14 = NameAndType        #15:#16        // makeConcatWithConstants:(Z)Ljava/lang/String;
          #15 = Utf8               makeConcatWithConstants
          #16 = Utf8               (Z)Ljava/lang/String;

        11: invokevirtual #17                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        Используется для вызова методов класса, при этом используется динамический поиск какой метод вызывать, основываясь на классе (Dynamic Dispatch). 
        Так как методы могут быть переопределены, то сначала проверяется наличие метода в переданном классе, потом в родительском и так далее. Для поиска в HotSpot используется специальная таблица методов.
        При этом первым параметром передается ссылка на объект.
          #17 = Methodref          #18.#19        // java/io/PrintStream.println:(Ljava/lang/String;)V
          #18 = Class              #20            // java/io/PrintStream
          #19 = NameAndType        #21:#22        // println:(Ljava/lang/String;)V
          #20 = Utf8               java/io/PrintStream
          #21 = Utf8               println
          #22 = Utf8               (Ljava/lang/String;)V
---------------------------------------------------------------------------------
# b = true;
# System.out.println("b EQUAL " + b);

        14: iconst_1	# Загружает В СТЕК int (boolean, byte, char, short) константу 1 (true) в диапазоне [-1, 5]
        15: istore_1
        16: getstatic     #7                  // Field java/lang/System.out:Ljava/io/PrintStream;
		Находит ссылку на статическое поле указанное в пуле под индексом 7 и кладет ее на вершину стека
          #7 = Fieldref           #8.#9          // java/lang/System.out:Ljava/io/PrintStream;
          #8 = Class              #10            // java/lang/System
          #9 = NameAndType        #11:#12        // out:Ljava/io/PrintStream;
          #10 = Utf8               java/lang/System
          #11 = Utf8               out
          #12 = Utf8               Ljava/io/PrintStream;

        19: iload_1
        20: invokedynamic #13,  0             // InvokeDynamic #0:makeConcatWithConstants:(Z)Ljava/lang/String;
		Вызов динамически-вычисляемых call sites. Сейчас, например, используется в Java для создания объектов для лямбд.
          #13 = InvokeDynamic      #0:#14         // #0:makeConcatWithConstants:(Z)Ljava/lang/String;
          #14 = NameAndType        #15:#16        // makeConcatWithConstants:(Z)Ljava/lang/String;
          #15 = Utf8               makeConcatWithConstants
          #16 = Utf8               (Z)Ljava/lang/String;

        25: invokevirtual #17                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        Используется для вызова методов класса, при этом используется динамический поиск какой метод вызывать, основываясь на классе (Dynamic Dispatch). 
        Так как методы могут быть переопределены, то сначала проверяется наличие метода в переданном классе, потом в родительском и так далее. Для поиска в HotSpot используется специальная таблица методов.
        При этом первым параметром передается ссылка на объект.
          #17 = Methodref          #18.#19        // java/io/PrintStream.println:(Ljava/lang/String;)V
          #18 = Class              #20            // java/io/PrintStream
          #19 = NameAndType        #21:#22        // println:(Ljava/lang/String;)V
          #20 = Utf8               java/io/PrintStream
          #21 = Utf8               println
          #22 = Utf8               (Ljava/lang/String;)V
---------------------------------------------------------------------------------------
# if(b) System.out.println("IT WILL BE DO");
        28: iload_1
        29: ifeq          40
        32: getstatic     #7                  // Field java/lang/System.out:Ljava/io/PrintStream;
          #7 = Fieldref           #8.#9          // java/lang/System.out:Ljava/io/PrintStream;
          #8 = Class              #10            // java/lang/System
          #9 = NameAndType        #11:#12        // out:Ljava/io/PrintStream;
          #10 = Utf8               java/lang/System
          #11 = Utf8               out
          #12 = Utf8               Ljava/io/PrintStream;

        35: ldc           #23                 // String IT WILL BE DO
          #23 = String             #24            // IT WILL BE DO
          #24 = Utf8               IT WILL BE DO

        37: invokevirtual #17                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
          #17 = Methodref          #18.#19        // java/io/PrintStream.println:(Ljava/lang/String;)V
          #18 = Class              #20            // java/io/PrintStream
          #19 = NameAndType        #21:#22        // println:(Ljava/lang/String;)V
          #20 = Utf8               java/io/PrintStream
          #21 = Utf8               println
          #22 = Utf8               (Ljava/lang/String;)V
---------------------------------------------------------------------------------------------------
# b = false;
        40: iconst_0
        41: istore_1
        42: iload_1
---------------------------------------------------------------------------------------------------
# if(b) System.out.println("IT WILL NOT BE DO NOT");
        43: ifeq          54
        46: getstatic     #7                  // Field java/lang/System.out:Ljava/io/PrintStream;
          #7 = Fieldref           #8.#9          // java/lang/System.out:Ljava/io/PrintStream;
          #8 = Class              #10            // java/lang/System
          #9 = NameAndType        #11:#12        // out:Ljava/io/PrintStream;
          #10 = Utf8               java/lang/System
          #11 = Utf8               out
          #12 = Utf8               Ljava/io/PrintStream;

        49: ldc           #25                 // String IT WILL NOT BE DO NOT
          #25 = String             #26            // IT WILL NOT BE DO NOT
          #26 = Utf8               IT WILL NOT BE DO NOT

        51: invokevirtual #17                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
          #17 = Methodref          #18.#19        // java/io/PrintStream.println:(Ljava/lang/String;)V
          #18 = Class              #20            // java/io/PrintStream
          #19 = NameAndType        #21:#22        // println:(Ljava/lang/String;)V
          #20 = Utf8               java/io/PrintStream
          #21 = Utf8               println
          #22 = Utf8               (Ljava/lang/String;)V

        54: getstatic     #7                  // Field java/lang/System.out:Ljava/io/PrintStream;
          #7 = Fieldref           #8.#9          // java/lang/System.out:Ljava/io/PrintStream;
          #8 = Class              #10            // java/lang/System
          #9 = NameAndType        #11:#12        // out:Ljava/io/PrintStream;
          #10 = Utf8               java/lang/System
          #11 = Utf8               out
          #12 = Utf8               Ljava/io/PrintStream;
------------------------------------------------------------------------------------------------------
# System.out.println("10 > 9 EQUAL " + (10 > 9));
        57: ldc           #27                 // String 10 > 9 EQUAL true
          #27 = String             #28            // 10 > 9 EQUAL true
          #28 = Utf8               10 > 9 EQUAL true

        59: invokevirtual #17                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
          #17 = Methodref          #18.#19        // java/io/PrintStream.println:(Ljava/lang/String;)V
          #18 = Class              #20            // java/io/PrintStream
          #19 = NameAndType        #21:#22        // println:(Ljava/lang/String;)V
          #20 = Utf8               java/io/PrintStream
          #21 = Utf8               println
          #22 = Utf8               (Ljava/lang/String;)V

        62: return
      LineNumberTable:
        line 7: 0
        line 8: 2
        line 10: 14
        line 11: 16
        line 13: 28
        line 14: 40
        line 15: 42
        line 17: 54
        line 18: 62
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      63     0  args   [Ljava/lang/String;
            2      61     1     b   Z
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 40
          locals = [ int ]
        frame_type = 13 /* same */
}
SourceFile: "BoolTest.java"
BootstrapMethods:
  0: #46 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #52 b EQUAL \u0001
InnerClasses:
  public static final #59= #55 of #57;    // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
