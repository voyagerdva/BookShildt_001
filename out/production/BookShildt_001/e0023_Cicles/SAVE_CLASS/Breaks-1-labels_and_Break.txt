Classfile /E:/__PROJECT__/JAVA/BookShildt_001/out/production/BookShildt_001/e0023_Cicles/Breaks.class
  Last modified 16 окт. 2022 г.; size 936 bytes
  SHA-256 checksum 84a684946c7ea85c4f0a4ac5ce0463a1195efbd4a116da27e0890df2af1207f7
  Compiled from "Breaks.java"
public class e0023_Cicles.Breaks
  minor version: 0
  major version: 61
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #29                         // e0023_Cicles/Breaks
  super_class: #2                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 2, attributes: 1
Constant pool:
   #1 = Methodref          #2.#3          // java/lang/Object."<init>":()V
   #2 = Class              #4             // java/lang/Object
   #3 = NameAndType        #5:#6          // "<init>":()V
   #4 = Utf8               java/lang/Object
   #5 = Utf8               <init>
   #6 = Utf8               ()V
   #7 = Fieldref           #8.#9          // java/lang/System.out:Ljava/io/PrintStream;
   #8 = Class              #10            // java/lang/System
   #9 = NameAndType        #11:#12        // out:Ljava/io/PrintStream;
  #10 = Utf8               java/lang/System
  #11 = Utf8               out
  #12 = Utf8               Ljava/io/PrintStream;
  #13 = String             #14            // 1 - block first
  #14 = Utf8               1 - block first
  #15 = Methodref          #16.#17        // java/io/PrintStream.println:(Ljava/lang/String;)V
  #16 = Class              #18            // java/io/PrintStream
  #17 = NameAndType        #19:#20        // println:(Ljava/lang/String;)V
  #18 = Utf8               java/io/PrintStream
  #19 = Utf8               println
  #20 = Utf8               (Ljava/lang/String;)V
  #21 = String             #22            // 2 - block second
  #22 = Utf8               2 - block second
  #23 = String             #24            // 3 - block third. Предшествует оператору break
  #24 = Utf8               3 - block third. Предшествует оператору break
  #25 = String             #26            // Этот оператор не будет выполняться
  #26 = Utf8               Этот оператор не будет выполняться
  #27 = String             #28            // 1- end - block first. Этот оператор следует за блоком second
  #28 = Utf8               1- end - block first. Этот оператор следует за блоком second
  #29 = Class              #30            // e0023_Cicles/Breaks
  #30 = Utf8               e0023_Cicles/Breaks
  #31 = Utf8               Code
  #32 = Utf8               LineNumberTable
  #33 = Utf8               LocalVariableTable
  #34 = Utf8               this
  #35 = Utf8               Le0023_Cicles/Breaks;
  #36 = Utf8               main
  #37 = Utf8               ([Ljava/lang/String;)V
  #38 = Utf8               args
  #39 = Utf8               [Ljava/lang/String;
  #40 = Utf8               t
  #41 = Utf8               Z
  #42 = Utf8               StackMapTable
  #43 = Utf8               SourceFile
  #44 = Utf8               Breaks.java
{
  public e0023_Cicles.Breaks();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 3: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Le0023_Cicles/Breaks;

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=2, locals=2, args_size=1
         0: iconst_1
         1: istore_1
         
         2: getstatic     #7                  // Field java/lang/System.out:Ljava/io/PrintStream;
         5: ldc           #13                 // String 1 - block first
         7: invokevirtual #15                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
         
        10: getstatic     #7                  // Field java/lang/System.out:Ljava/io/PrintStream;
        13: ldc           #21                 // String 2 - block second
        15: invokevirtual #15                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        
        18: getstatic     #7                  // Field java/lang/System.out:Ljava/io/PrintStream;
        21: ldc           #23                 // String 3 - block third. Предшествует оператору break
        23: invokevirtual #15                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        26: iload_1
        
        27: ifeq          33
        30: goto          49
        
        33: getstatic     #7                  // Field java/lang/System.out:Ljava/io/PrintStream;
        36: ldc           #25                 // String Этот оператор не будет выполняться
        38: invokevirtual #15                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        
        41: getstatic     #7                  // Field java/lang/System.out:Ljava/io/PrintStream;
        44: ldc           #25                 // String Этот оператор не будет выполняться
        46: invokevirtual #15                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        
        49: getstatic     #7                  // Field java/lang/System.out:Ljava/io/PrintStream;
        52: ldc           #27                 // String 1- end - block first. Этот оператор следует за блоком second
        54: invokevirtual #15                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        57: return
      LineNumberTable:
        line 5: 0
        line 8: 2
        line 10: 10
        line 12: 18
        line 13: 26
        line 14: 30
        line 16: 33
        line 18: 41
        line 20: 49
        line 22: 57
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      58     0  args   [Ljava/lang/String;
            2      56     1     t   Z
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 33
          locals = [ int ]
        frame_type = 15 /* same */
}
SourceFile: "Breaks.java"
#############################################################################################
package e0023_Cicles;

public class Breaks {
    public static void main(String[] args) {
        boolean t = true;

        first: {
            System.out.println("1 - block first");
            second: {
                System.out.println("2 - block second");
                third: {
                    System.out.println("3 - block third. Предшествует оператору break");
                    if (t) {
                        break second;
                    }
                    System.out.println("Этот оператор не будет выполняться");
                }
                System.out.println("Этот оператор не будет выполняться");
            }
            System.out.println("1- end - block first. Этот оператор следует за блоком second");
        }
    }
}
---------------------------------------------------------------------------------------------
